//Источник http://infostart.ru/public/75657/

//*********************************************************************************** 
//*********************************************************************************** 
//*************** КОНВЕРТАЦИЯ MXL  В  HTML ****************************************** 
//*********************************************************************************** 
//*********************************************************************************** 

функция ВернутьGRBЦвет(Цвет,ВидЦвет="")
	если цвет.вид=ВидЦвета.Абсолютный тогда
		возврат цвет;
	иначеесли цвет.вид=ВидЦвета.АвтоЦвет тогда	
		если  ВидЦвет="Фон" тогда                     
			возврат новый цвет(255,255,255);
		иначеесли ВидЦвет="Текст" Или ВидЦвет="Рамка" тогда
			возврат новый цвет(0,0,0);
		иначе
			возврат новый цвет(255,255,255);
		конецесли; 
	иначеесли цвет.вид = ВидЦвета.WindowsЦвет тогда
		если WindowsЦвета.ПолосаПрокрутки тогда
			возврат новый цвет(200,200,200);
		иначеесли	цвет = WindowsЦвета.РабочийСтол тогда
			возврат новый цвет(0,0,0);
		иначеесли	цвет = WindowsЦвета.ЗаголовокАктивногоОкна     тогда
			возврат новый цвет(153,180,209);
		иначеесли	цвет = WindowsЦвета.ЗаголовокНеактивногоОкна        тогда
			возврат новый цвет(191,205,219);
		иначеесли	цвет = WindowsЦвета.СтрокаМеню тогда
			возврат новый цвет(240,240,240);
		иначеесли	цвет = WindowsЦвета.ФонОкна тогда
			возврат новый цвет(255,255,255);
		иначеесли	цвет = WindowsЦвета.ГраницаАктивногоОкна тогда
			возврат новый цвет(100,100,100);
		иначеесли	цвет = WindowsЦвета.ТекстПунктаМеню тогда
			возврат новый цвет(0,0,0);
		иначеесли	цвет = WindowsЦвета.ТекстОкна тогда
			возврат новый цвет(0,0,0);
		иначеесли	цвет = WindowsЦвета.ТекстЗаголовкаАктивногоОкна тогда
			возврат новый цвет(0,0,0);
		иначеесли	цвет = WindowsЦвета.ГраницаАктивногоОкна тогда
			возврат новый цвет(180,180,180);
		иначеесли	цвет = WindowsЦвета.ГраницаНеактивногоОкна тогда
			возврат новый цвет(244,247,252);
		иначеесли	цвет = WindowsЦвета.РабочаяОбластьПриложения тогда
			возврат новый цвет(171,171,171);
		иначеесли	цвет = WindowsЦвета.Подсвеченный тогда
			возврат новый цвет(51,153,255);
		иначеесли	цвет = WindowsЦвета.ТекстПодсвеченный тогда
			возврат новый цвет(255,255,255);
		иначеесли	цвет = WindowsЦвета.Кнопка тогда
			возврат новый цвет(240,240,240);
		иначеесли	цвет = WindowsЦвета.ТекстКнопки тогда
			возврат новый цвет(160,160,160);
		иначеесли	цвет = WindowsЦвета.ТекстНедоступный тогда
			возврат новый цвет(109,109,109);
		иначеесли	цвет = WindowsЦвета.ТекстКнопки тогда
			возврат новый цвет(0,0,0);
		иначеесли	цвет = WindowsЦвета.ТекстЗаголовкаНеактивногоОкна тогда
			возврат новый цвет(67,78,84);
		иначеесли	цвет = WindowsЦвета.КнопкаПодсвеченная тогда
			возврат новый цвет(255,255,255);
		иначеесли	цвет = WindowsЦвета.ТеньКнопкиТемная тогда
			возврат новый цвет(105,105,105);
		иначеесли	цвет = WindowsЦвета.ТеньКнопкиСветлая тогда
			возврат новый цвет(227,227,227);
		иначеесли	цвет = WindowsЦвета.ТекстПодсказки тогда
			возврат новый цвет(0,0,0);
		иначеесли	цвет = WindowsЦвета.Подсказка тогда
			возврат новый цвет(255,255,225);
		иначеесли	цвет = WindowsЦвета.HotLight тогда
			возврат новый цвет(51,153,255);
		иначеесли	цвет = WindowsЦвета.ЗаголовокАктивногоОкнаГрадиент тогда
			возврат новый цвет(153,180,209);
		иначеесли	цвет = WindowsЦвета.ЗаголовокНеактивногоОкнаГрадиент тогда
			возврат новый цвет(191,205,219);
		иначеесли	цвет = WindowsЦвета.ЗаголовокАктивногоОкнаГрадиентСредний тогда
			возврат новый цвет(153,180,209);
		иначеесли	цвет = WindowsЦвета.ЗаголовокНеактивногоОкнаГрадиентСредний тогда
			возврат новый цвет(191,205,219);
		конецесли;
	иначеесли цвет.вид=ВидЦвета.WebЦвет тогда	
		если цвет= WebЦвета.АкварельноСиний тогда
			возврат новый цвет(240,248,255);
		иначеесли	цвет= WebЦвета.АнтикБелый тогда
			возврат новый цвет(250,235,215);
		иначеесли	цвет= WebЦвета.ЦианАкварельный тогда
			возврат новый цвет(0,255,255);
		иначеесли	цвет= WebЦвета.Аквамарин тогда
			возврат новый цвет(127,255,212);
		иначеесли	цвет= WebЦвета.Лазурный тогда
			возврат новый цвет(240,255,255);
		иначеесли	цвет= WebЦвета.Бежевый тогда
			возврат новый цвет(245,245,220);
		иначеесли	цвет= WebЦвета.СветлоКоричневый тогда
			возврат новый цвет(255,228,196);
		иначеесли	цвет= WebЦвета.Черный тогда
			возврат новый цвет(0,0,0);
		иначеесли	цвет= WebЦвета.БледноМиндальный тогда
			возврат новый цвет(255,235,205);
		иначеесли	цвет= WebЦвета.Синий тогда
			возврат новый цвет(0,0,255);
		иначеесли	цвет= WebЦвета.СинеФиолетовый тогда
			возврат новый цвет(138,43,226);
		иначеесли	цвет= WebЦвета.Коричневый тогда
			возврат новый цвет(165,42,42);
		иначеесли	цвет= WebЦвета.Древесный тогда
			возврат новый цвет(222,184,135);
		иначеесли	цвет= WebЦвета.СероСиний тогда
			возврат новый цвет(95,158,160);
		иначеесли	цвет= WebЦвета.ЗеленоватоЖелтый тогда
			возврат новый цвет(127,255,0);
		иначеесли	цвет= WebЦвета.Шоколадный тогда
			возврат новый цвет(210,105,30);
		иначеесли	цвет= WebЦвета.Коралловый тогда
			возврат новый цвет(255,127,80);
		иначеесли	цвет= WebЦвета.Васильковый тогда
			возврат новый цвет(100,149,237);
		иначеесли	цвет= WebЦвета.ШелковыйОттенок тогда
			возврат новый цвет(255,248,220);
		иначеесли	цвет= WebЦвета.Кремовый тогда
			возврат новый цвет(255,251,240);
		иначеесли	цвет= WebЦвета.Малиновый тогда
			возврат новый цвет(220,20,60);
		иначеесли	цвет= WebЦвета.Циан тогда
			возврат новый цвет(0,255,255);
		конецесли;	        
	иначеесли цвет.вид=ВидЦвета.ЭлементСтиля тогда
		если Цвет =  ЦветаСтиля.ЦветФонаФормы тогда
			возврат новый цвет(234,229,216);
		иначеесли	Цвет=  ЦветаСтиля.ЦветТекстаФормы тогда
			возврат новый цвет(0,0,0);
		иначеесли	Цвет=  ЦветаСтиля.ЦветФонаКнопки тогда
			возврат новый цвет(222,217,204);
		иначеесли	Цвет=  ЦветаСтиля.ЦветТекстаКнопки тогда
			возврат новый цвет(0,0,0);
		иначеесли	Строка(Цвет)= "стиль: Фон редактирования" тогда
			возврат новый цвет(255,255,255);
		иначеесли	Строка(Цвет)= "стиль: Текст редактирования" тогда
			возврат новый цвет(0,0,0);
		иначеесли	Строка(Цвет)=  "стиль: Фон выделения редактирования" тогда
			возврат новый цвет(0,0,128);
		иначеесли	Строка(Цвет)=  "стиль: Текст выделения редактирования" тогда
			возврат новый цвет(255,255,255);
		иначеесли	Цвет=  ЦветаСтиля.АльтернативныйЦветФонаПоля тогда
			возврат новый цвет(204,255,255);
		иначеесли	Цвет = ЦветаСтиля.ЦветФонаПодсказки тогда
			возврат новый цвет(225,253,253);
		иначеесли	Цвет = ЦветаСтиля.ЦветТекстаПодсказки тогда
			возврат новый цвет(0,0,0);
		иначеесли	Цвет = ЦветаСтиля.ЦветОсобогоТекста тогда
			возврат новый цвет(255,0,0);
		иначеесли	Цвет = ЦветаСтиля.ЦветОтрицательногоЧисла тогда
			возврат новый цвет(255,0,0);
		иначеесли	Цвет = ЦветаСтиля.ЦветРамки тогда
			возврат новый цвет(137,132,119);
			
		конецесли;	
	конецесли;	
конецфункции	

// Функия переводит число переданное в параметре
// Значение в строку (либо число) в системе счисления X
// X определяется линой шаблона, представление знаков разрядов
// значение шаблона, где сивол шаблона[k] - есть представление
// Например если шаблок "01", то перевод будет осуществлен в двоичную
// систему счисления, если "01234567", то в восьмиричную
// если "0123456789ABCDEF", то в шестнадцатиричную
// если "ЛИ", то в двоичную, где 0 представлен буквой Л, а 1 буквой И
// вариант шаблона:
// "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwzyzАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЬЫЪЭЮЯабвгдежзийклмнопрстуфхцчшщьыъэюя!@#$%^&*()_-=+{}[]\|/,.:;'""><"
// представит Значение в сто пятидесятишести ричной системе счисления,
// где соответствующий символ шаблона означает соответствующую цифру разряда
Функция Из_Число_В_XСчисл(Знач Значение, Шаблон="0123456789ABCDEF")
	Результат="";
	Основание = СтрДлина(Шаблон);
	Пока Значение>0 цикл
		Остат = Значение%Основание;
		Результат1=Сред(Шаблон,Остат+1,1);
		Значение = (Значение-Остат)/Основание;
		Результат = Результат1 + Результат;
	КонецЦикла;
	если Результат="" тогда 
		Возврат "00";
	иначеесли СтрДлина(Результат)=1 тогда
		возврат "0"+Результат
	иначе	
		Возврат Результат;
	конецесли;
КонецФункции

функция ЦветВВеб(цвет_,ВидЦвета="")
	цвет= ВернутьGRBЦвет(цвет_,ВидЦвета);
	возврат "#"+Из_Число_В_XСчисл(цвет.Красный)+Из_Число_В_XСчисл(цвет.Зеленый)+Из_Число_В_XСчисл(цвет.Синий);
конецфункции	

функция ПроверитьНаОпределяемостьШрифтов(ОбластьНовая)
	
	если ОбластьНовая.Шрифт.Вид = ВидШрифта.АвтоШрифт тогда
		новыйШрифт= Новый Шрифт("MS Shell Dlg", 8,ложь, ложь, ложь, ложь) ;
		ОбластьНовая.Шрифт =  новыйШрифт;
	иначеесли ОбластьНовая.Шрифт.Вид = ВидШрифта.WindowsШрифт тогда
		если ОбластьНовая.Шрифт=WindowsШрифты.ANSIШрифтМоноширинный тогда
			новыйШрифт= Новый Шрифт("Courier",9, ложь, ложь, ложь, ложь) ;
		иначеесли ОбластьНовая.Шрифт=WindowsШрифты.ANSIШрифтПропорциональный тогда	
			новыйШрифт= Новый Шрифт("MS Sans Serif",9, ложь, ложь, ложь, ложь) ;
		иначеесли ОбластьНовая.Шрифт=WindowsШрифты.OEMШрифтМоноширинный тогда		
			новыйШрифт= Новый Шрифт("Terminal", 9, ложь, ложь, ложь, ложь) ;
		иначеесли ОбластьНовая.Шрифт=WindowsШрифты.СистемныйШрифт тогда			
			новыйШрифт= Новый Шрифт("System",12, 8,ложь, ложь, ложь, ложь) ;
		иначеесли ОбластьНовая.Шрифт=WindowsШрифты.ШрифтДиалоговИМеню тогда				
			новыйШрифт= Новый Шрифт("MS Shell Dlg", 8,ложь, ложь, ложь, ложь) ;
		конецесли;	
		ОбластьНовая.Шрифт =  новыйШрифт;
	конецесли;	
	возврат  ОбластьНовая;
конецфункции

функция ВернутьСтильЛиний(обл,область,рез,ТД,ТЗПрорисовки)
	Сторона= рез;
	Проресованна=ложь;
	НетЛинии=  ТипЛинииЯчейкиТабличногоДокумента.НетЛинии;
		ТекЛиния=Область.ТипЛинии	;
	если рез="border-top:" тогда     // верх
		ПредыдущаяЛиния = ТД.область(обл.Верх-1,обл.лево).ГраницаСнизу.ТипЛинии;
		Проресованна=найти(ТЗПрорисовки[обл.Верх-1]["Кол_"+Формат(обл.лево,"ЧЦ=7; ЧГ=0")],"Н")>0;
	иначеесли рез="border-left:" тогда    // лево
		ПредыдущаяЛиния = ТД.область(обл.Верх,обл.лево-1).ГраницаСправа.ТипЛинии;
		Проресованна=обл.лево-1 >0 И найти(ТЗПрорисовки[обл.Верх]["Кол_"+Формат(обл.лево-1,"ЧЦ=7; ЧГ=0")],"П")>0;
	иначеесли рез="border-bottom:" тогда   // низ
		ПредыдущаяЛиния = ТД.область(обл.Низ-обл.Верх+1,обл.лево).ГраницаСверху.ТипЛинии;
		Проресованна= найти(ТЗПрорисовки[обл.Верх]["Кол_"+Формат(обл.лево,"ЧЦ=7; ЧГ=0")],"В")>0;
	иначеесли рез="border-right:" тогда   // право
		ПредыдущаяЛиния = ТД.область(обл.Верх,обл.лево+1).ГраницаСлева.ТипЛинии;
		Проресованна=обл.Право+1 <ТД.ШиринаТаблицы И найти(ТЗПрорисовки[обл.Верх]["Кол_"+Формат(обл.Право+1,"ЧЦ=7; ЧГ=0")],"Л")>0;
	конецесли;	
	// если линии нет, или равна предыдущей и она уже прорисована тогда нихрена не делаем
	если (ТекЛиния = ПредыдущаяЛиния и Проресованна) ИЛИ ТекЛиния = НетЛинии тогда
		возврат " ";
	иначе
		если область.ТипЛинии = ТипЛинииЯчейкиТабличногоДокумента.БольшойПунктир тогда
			рез= рез+" "+ЦветВВеб(обл.ЦветРамки,"Рамка") + " "+Область.Толщина+"px "+"dashed;"
		иначеесли область.ТипЛинии = ТипЛинииЯчейкиТабличногоДокумента.ЧастыйПунктир тогда	
			рез= рез+" "+ЦветВВеб(обл.ЦветРамки,"Рамка") + " "+Область.Толщина+"px "+"dotted;"
		иначеесли область.ТипЛинии = ТипЛинииЯчейкиТабличногоДокумента.Двойная тогда	
			рез= рез+" "+ЦветВВеб(обл.ЦветРамки,"Рамка") + " "+Область.Толщина+"px "+"double;"
		иначеесли область.ТипЛинии = ТипЛинииЯчейкиТабличногоДокумента.Сплошная тогда	
			рез= рез+" "+ЦветВВеб(обл.ЦветРамки,"Рамка") + " "+Область.Толщина+"px "+"solid;"
		конецесли;
		
		Для Сч=обл.лево По обл.Право Цикл
			Для Стр=обл.Верх По обл.Низ Цикл
				
				Про=ТЗПрорисовки[Стр]["Кол_"+Формат(Сч,"ЧЦ=7; ЧГ=0")];
				
				если Сторона="border-top:" тогда     // верх
					Про=Про+"В";
				иначеесли Сторона="border-left:" тогда    // лево
					Про=Про+"Л";
				иначеесли Сторона="border-bottom:" тогда   // низ
					Про=Про+"Н";
				иначеесли Сторона="border-right:" тогда   // право
					Про=Про+"П";
				конецесли;			
				
				ТЗПрорисовки[Стр]["Кол_"+Формат(Сч,"ЧЦ=7; ЧГ=0")]=Про;
			КонецЦикла; 
		КонецЦикла; 
	конецесли;
	возврат рез	
	
конецфункции

функция ВернутьОписаниеКласса(обл,ТД,ТЗПрорисовки)
	если (обл.Верх<>обл.Низ ИЛИ   обл.Лево<> обл.Право )
		И   обл.Шрифт=неопределено тогда
		ОбластьНовая = ТД.Получитьобласть(обл.Верх,,обл.Верх).область(1,обл.Лево);
	иначе
		ОбластьНовая=  обл;
	конецесли;	
	  ОбластьНовая=ПроверитьНаОпределяемостьШрифтов(ОбластьНовая);
	  
	  ОписаниеКласса= " { font-family: "+ОбластьНовая.Шрифт.Имя								+
				"; font-size: "+Формат(ОбластьНовая.Шрифт.Размер,"ЧЦ=7; ЧГ=0")					+
				"pt; font-style: "+?(ОбластьНовая.Шрифт.Наклонный,"oblique","normal")	+
				"; "+?(ОбластьНовая.Шрифт.Жирный,"font-weight: bold;","")				+
				" color: "+ЦветВВеб(ОбластьНовая.ЦветТекста,"Текст")						+
				?(ОбластьНовая.ВысотаСтроки>0,"; height: "+Формат(ОбластьНовая.ВысотаСтроки,"ЧЦ=7; ЧГ=0")+"pt","")						+
				"; background-color: "+ЦветВВеб(ОбластьНовая.ЦветФона,"фон")		+";"	;
				если ТипЗнч(обл.Расшифровка)=Тип("структура") И 
					ОбластьНовая.Расшифровка.количество()>1 тогда// фактически это уровень группировки
					ОписаниеКласса=ОписаниеКласса +"padding-left: " +Формат((Обл.Расшифровка.количество()-1)*7,"ЧЦ=7; ЧГ=0") +"px;"		;	
					//Обл.Расшифровка.количество() 
				иначеесли обл.расшифровка<>неопределено И    //конкретный объект, 
					НЕ (ТипЗнч(обл.Расшифровка)=Тип("структура")) И
					 ТД.КоличествоУровнейГруппировокСтрок()>1 тогда
                    ОписаниеКласса=ОписаниеКласса +"padding-left: " +Формат((ТД.КоличествоУровнейГруппировокСтрок()-1)*7,"ЧЦ=7; ЧГ=0") +"px;"		;	
				иначе	
					ОписаниеКласса=ОписаниеКласса+" padding-left: 3px; ";
				конецесли;
				//padding-left: 21px;
				
				если ОбластьНовая.ГоризонтальноеПоложение=ГоризонтальноеПоложение.Авто тогда
					ОписаниеКласса=" "+ОписаниеКласса + " text-align:  auto ";
				иначеесли ОбластьНовая.ГоризонтальноеПоложение=ГоризонтальноеПоложение.Лево тогда
					ОписаниеКласса=" "+ОписаниеКласса + " text-align: left ";
				иначеесли ОбластьНовая.ГоризонтальноеПоложение=ГоризонтальноеПоложение.ПоШирине тогда
					ОписаниеКласса=" "+ОписаниеКласса + " text-align: justify ";
				иначеесли ОбластьНовая.ГоризонтальноеПоложение=ГоризонтальноеПоложение.Право тогда
					ОписаниеКласса=" "+ОписаниеКласса + " text-align: right ";
				иначеесли ОбластьНовая.ГоризонтальноеПоложение=ГоризонтальноеПоложение.Центр тогда
					ОписаниеКласса=" "+ОписаниеКласса + " text-align: center ";
				конецесли;
ОписаниеКласса=" "+ОписаниеКласса +"; vertical-align: "+?(обл.ВертикальноеПоложение=ВертикальноеПоложение.Верх,"top",
				?(обл.ВертикальноеПоложение=ВертикальноеПоложение.Низ,"bottom","middle"))					+
				";"+  	ВернутьСтильЛиний(обл,обл.ГраницаСлева,"border-left:",ТД,ТЗПрорисовки)		+
						ВернутьСтильЛиний(обл,обл.ГраницаСверху,"border-top:",ТД,ТЗПрорисовки)		+
						ВернутьСтильЛиний(обл,обл.ГраницаСнизу,"border-bottom:",ТД,ТЗПрорисовки)	+
						ВернутьСтильЛиний(обл,обл.ГраницаСправа,"border-right:",ТД,ТЗПрорисовки)	+  "}" ;
											  
возврат   ОписаниеКласса;
конецфункции

процедура КонвертацияXML_в_HTML(ТД,ИмяФайлаHTML) экспорт
	// прочитаем	
//	ТД=новый ТабличныйДокумент;
//	
//	ТД.Прочитать(ИмяФайлаXML);
	
	// создадим таблицу прорисовки чтоб не рисовать рамки несколько раз
	ТЗПрорисовки=новый ТаблицаЗначений;
	КС = Новый КвалификаторыСтроки(4);
	Массив = Новый Массив;
	Массив.Добавить(Тип("Строка"));
	ОписаниеТиповС = Новый ОписаниеТипов(Массив, , КС);
	Для Колонка=1 По  ТД.ШиринаТаблицы Цикл
		ТЗПрорисовки.Колонки.Добавить("Кол_"+Формат(Колонка,"ЧЦ=7; ЧГ=0"),ОписаниеТиповС);
	конеццикла;
	Для Строка=0 По ТД.ВысотаТаблицы  Цикл
		ТЗПрорисовки.Добавить();
	конеццикла;
	// делаем шапку html
	ТекстФайла = Новый ЗаписьТекста(ИмяФайлаHTML,КодировкаТекста.UTF8); 
	ТекстФайла.ЗаписатьСтроку("<!DOCTYPE HTML PUBLIC "+""""+"-//W3C//DTD HTML 4.0 Transitional//EN"+""""+">");
	ТекстФайла.ЗаписатьСтроку("<HTML>");
	ТекстФайла.ЗаписатьСтроку("<HEAD>");
	ТекстФайла.ЗаписатьСтроку("<META HTTP-EQUIV="+""""+"Content-Type"+""""+" CONTENT="+""""+"text/html; CHARSET=utf-8"+""""+">");
	ТекстФайла.ЗаписатьСтроку("<TITLE></TITLE>");
	ТекстФайла.ЗаписатьСтроку("<STYLE TYPE="+""""+"text/css"+""""+"> ");
    //******************************************************* 
	//****************** создание стилей      **********************************

	БлокСтилей="body { background: #ffffff; margin: 0; font-family: Arial; font-size: 8pt; font-style: normal; }
	|table {table-layout: fixed; padding: 0 0 0 1px; vertical-align:bottom; width: 100% ;font-family: Arial; font-size: 8pt; font-style: normal; }";
	                                                                     //width: 100% ;
	//******************************************************* 
	// переменные для сборки
	НачалоТаблицы = "<TABLE  CELLSPACING=0>  ";
	КонецТаблицы  = "</TABLE>";
	НачалоСтроки=  "<TR>";
	КонецСтроки=  "</TR>";
	МакетКолонки = "<TD CLASS=#ИмяКласса #ROWSPAN WIDTH ="+"#ШиринаКолонки"+"рх >#ТекстЗначения </TD>";
	//******************************************************* 
	Стили = новый СписокЗначений;
 	//******************************************************* 
	ТелоФайла=НачалоТаблицы;
	ВыводРазрешен=ложь;
	СтрочкаКолонок="";
	
	Граница=Новый линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная,1,0);
	Для Строка=1 По ТД.ВысотаТаблицы  Цикл
		СтрочкаКолонок=МакетКолонки;
		
		ВыводРазрешен=ложь;   
		
		СтрокаЦеликом =ТД.ПолучитьОбласть(Строка,,Строка);
		ШиринаТаблички=?(СтрокаЦеликом.ШиринаТаблицы=0,ТД.ШиринаТаблицы ,СтрокаЦеликом.ШиринаТаблицы);
		Для Колонка=1 По  ШиринаТаблички цикл //ТД.ШиринаТаблицы Цикл
			Обл=ТД.Область(Строка,Колонка); 
			//обл.ширинаСтолбца()
			#Если клиент тогда
				состояние("Создаем таблицу "+Формат(Строка,"ЧЦ=7; ЧГ=0") +" из " + Формат(ТД.ВысотаТаблицы,"ЧЦ=7; ЧГ=0"));
			#Конецесли
			если Обл.Видимость тогда
				ВыводРазрешен=Истина;
				ШиринаКолонки=Обл.ШиринаКолонки;
				
				
				если (Обл.Верх< обл.Низ И строка=обл.Верх) И //объединено в строках и колонках
					обл.Лево< обл.Право И колонка=  обл.Лево тогда
					если найти( СтрочкаКолонок,"#ROWSPAN")=0 тогда
						СтрочкаКолонок=СтрочкаКолонок+"
						|"+ МакетКолонки;
					конецесли;
					ОбъединимОба=  " ROWSPAN="+Формат(обл.Низ -Обл.Верх+1,"ЧЦ=7; ЧГ=0") + "  COLSPAN="+Формат(обл.Право -Обл.Лево+1,"ЧЦ=7; ЧГ=0"); 
					СтрочкаКолонок=СтрЗаменить(СтрочкаКолонок,"#ROWSPAN",ОбъединимОба);
					
					ШиринаКолонки=0;
					счч=1;
					пока счч< обл.Право цикл //И счч<ШиринаТаблички цикл
						ШиринаКолонки=ШиринаКолонки+  Обл.ШиринаКолонки;
						счч=счч+1;
					конеццикла;
					
				иначеесли Обл.Верх< обл.Низ И строка=обл.Верх И обл.Лево=обл.Право тогда // в строках объединено   в колонках нет   ROWSPAN=2
					если найти( СтрочкаКолонок,"#ROWSPAN")=0 тогда
						СтрочкаКолонок=СтрочкаКолонок+"
						|"+ МакетКолонки;
					конецесли;
					СтрочкаКолонок=СтрЗаменить(СтрочкаКолонок,"#ROWSPAN","ROWSPAN="+Формат(обл.Низ -Обл.Верх+1,"ЧЦ=7; ЧГ=0"));
				иначеесли обл.Лево< обл.Право И колонка=  обл.Лево И Обл.Верх= обл.Низ  тогда   // в колонках объединено в строках нет
					СтрочкаКолонок=СтрЗаменить(СтрочкаКолонок,"#ROWSPAN","COLSPAN="+Формат(обл.Право -Обл.Лево+1,"ЧЦ=7; ЧГ=0"));
					 счч=обл.Лево;
					 ШиринаКолонки=0;
					 пока счч< обл.Право цикл //И счч<ШиринаТаблички цикл
						 ШиринаКолонки=ШиринаКолонки+  Обл.ШиринаКолонки;
						 счч=счч+1;
                     конеццикла;
				иначеесли найти(обл.Имя,":")=0 тогда
					СтрочкаКолонок=СтрЗаменить(СтрочкаКолонок,"#ROWSPAN"," ");
				иначе
					продолжить;
				конецесли;
				
				Стиль_Г=ВернутьОписаниеКласса(обл,ТД,ТЗПрорисовки);
				
				К3 = Стили.НайтиПоЗначению(Стиль_Г);
				Если К3 = неопределено Тогда
					ИмяКласса = "s" + СокрЛП(Строка(Стили.количество() + 1));
					Стили.Добавить(Стиль_Г, ИмяКласса);
					БлокСтилей=БлокСтилей+"
					|td."+ИмяКласса+Стиль_Г;
				Иначе
					ИмяКласса=К3.Представление;
				КонецЕсли;		
				если (обл.Верх<>обл.Низ ИЛИ   обл.Лево<> обл.Право )
					И   обл.Шрифт=неопределено тогда
					ТекстЯчейки = ТД.Получитьобласть(обл.Верх,,обл.Верх).область(1,обл.Лево).текст;
					ШрифтЯчейки= ТД.Получитьобласть(обл.Верх,,обл.Верх).область(1,обл.Лево).шрифт;
				иначе
					ТекстЯчейки=  обл.Текст;
					ШрифтЯчейки = обл.шрифт;
				конецесли;		
			//	ОпределительШирины=новый ТабличныйДокумент;
				//аа=ОпределительШирины.ПолучитьОбласть(1,1);
				//аа.Вывод=ИспользованиеВывода.Разрешить;
				//аа.АвтоМасштаб=ложь;
				
			//	//аа.АвтоМасштаб=Истина;
			//	ОбластьПроверкиШирины=аа.Область(1,1);
			//	ОбластьПроверкиШирины.АвтоВысотаСтроки=Ложь;
			//	ОбластьПроверкиШирины.РазмещениеТекста=ТипРазмещенияТекстаТабличногоДокумента.Переносить;
			//	ОбластьПроверкиШирины.Обвести(Граница,Граница,Граница,Граница);
			//	ОбластьПроверкиШирины.Шрифт= ШрифтЯчейки;
			//	ОбластьПроверкиШирины.Текст= ТекстЯчейки;
			//	ОбластьПроверкиШирины.ШиринаКолонки = СтрДлина(ТекстЯчейки);
			////	ОбластьПроверкиШирины.АвтоВысотаСтроки=Ложь;
			//	ОпределительШирины.Вывести(аа);
			//	аа.АвтоМасштаб=ложь;
			//	
			//	//СтрЧислоСтрок(ОпределительШирины.Область(1,1).Текст)
			//	ширинаПолучилась=ОпределительШирины.Область(1,1).ШиринаКолонки;
			//	если строка=38 и   колонка=2 тогда
			//		ОпределительШирины.Показать();
			//	конецесли;
				СтрочкаКолонок=СтрЗаменить(СтрочкаКолонок,"#ИмяКласса",ИмяКласса);
				СтрочкаКолонок=СтрЗаменить(СтрочкаКолонок,"#ШиринаКолонки", Формат(ШиринаКолонки*7,"ЧЦ=7; ЧГ=0"));
				СтрочкаКолонок=СтрЗаменить(СтрочкаКолонок,"#ТекстЗначения", ?(ТекстЯчейки="","&nbsp;", ТекстЯчейки));
				если колонка+1<=тд.ШиринаТаблицы тогда
					СтрочкаКолонок=СтрочкаКолонок+"
					|"+ МакетКолонки;
				конецесли;
				
			конецесли;
		КонецЦикла; 
		если ВыводРазрешен тогда
			СтрочкаКолонок=СтрЗаменить(СтрочкаКолонок,МакетКолонки,"");
			
			СтрочкаВида= НачалоСтроки+"
			|"+ СтрочкаКолонок +"
			|"+ КонецСтроки;
			
			ТелоФайла = ТелоФайла+"
			|"+СтрочкаВида;
			
		конецесли;
		
		//если в соседних строках разное количество колонок, то это разные таблицы
		// но возможно что последняя колонка обьеденина, тогда , 
		//
		//				  пример таблицы    | ширина таблицы   	| номер стороки
		//		_____________________________                   |
		//		|__________________|		| 	2				|	1
		//		|__________________|________|   1               |   2
		//		|__________________|        |   2               |   3
		//		|__________________|		|   1               |   4
		//		|__________________|		|   1               |   5
		//		|__________________|________|   1               |   6
		//		|__________________|________|   2               |   7
		
		//возможен вариант, что таблицы разные, а количество строк одинаково, тут нужно будет проверить под отлатчиком
		если ВыводРазрешен тогда
			// таблицу не закрываем    (см стр.4 и стр.5 )
			если ТД.ПолучитьОбласть(Строка,,Строка).ШиринаТаблицы =ТД.ПолучитьОбласть(Строка+1,,Строка+1).ШиринаТаблицы тогда 
				
				// если не равно, то проверим на то что в следующей строке есть конечная колонка с объединением (см стр.2)
			иначеесли 	найти(ТД.Область(Строка+1,ТД.ПолучитьОбласть(Строка+1,,Строка+1).ШиринаТаблицы +1).Имя,":")>0  тогда
				ДопКолонки=ТД.Область(Строка+1,ТД.ПолучитьОбласть(Строка+1,,Строка+1).ШиринаТаблицы +1).Право-ТД.ПолучитьОбласть(Строка+1,,Строка+1).ШиринаТаблицы;
				//таблицу не закрываем
				если  ТД.ПолучитьОбласть(Строка,,Строка).ШиринаТаблицы = ТД.ПолучитьОбласть(Строка+1,,Строка+1).ШиринаТаблицы + ДопКолонки тогда
					
				конецесли;
				
				// может быть когда текущая строка имеет последнюю объединеную колонку , а следующая нет (см стр.6 и стр.7)
			иначеесли 	найти(ТД.Область(Строка,ТД.ПолучитьОбласть(Строка,,Строка).ШиринаТаблицы +1).Имя,":")>0 тогда
				ДопКолонки=ТД.Область(Строка,ТД.ПолучитьОбласть(Строка,,Строка).ШиринаТаблицы +1).Право-ТД.ПолучитьОбласть(Строка,,Строка).ШиринаТаблицы;
				// таблицу не закрываем
				если ТД.ПолучитьОбласть(Строка+1,,Строка+1).ШиринаТаблицы = ТД.ПолучитьОбласть(Строка,,Строка).ШиринаТаблицы + ДопКолонки тогда
					
				конецесли;	
				
			иначе // иначе закроем
				ТелоФайла = ТелоФайла+"
				|"+КонецТаблицы;
				ТелоФайла = ТелоФайла+"
				|"+НачалоТаблицы;
				
			конецесли;	
			
		конецесли;	
		
	КонецЦикла;	
	ТелоФайла = ТелоФайла+"
	|"+КонецТаблицы;
	//******************************************************* 
	
	ТекстФайла.ЗаписатьСтроку(БлокСтилей);
	
	ТекстФайла.ЗаписатьСтроку("</STYLE>");
	ТекстФайла.ЗаписатьСтроку("</HEAD>");
	ТекстФайла.ЗаписатьСтроку("<BODY>");
	
	//******************************************************* 
	
	ТекстФайла.ЗаписатьСтроку(ТелоФайла);
	//******************************************************* 
	ТекстФайла.ЗаписатьСтроку("</BODY>");
	ТекстФайла.ЗаписатьСтроку("</HTML>");
	
конецпроцедуры
