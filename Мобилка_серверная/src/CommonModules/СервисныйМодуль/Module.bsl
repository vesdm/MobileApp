Процедура Отладка(ДанныеОтладки)  Экспорт
	СтруктураПодключения = СтандартныеНастройкиПодключения();

	ВСОпределение = Новый WSОпределения(СтруктураПодключения.Адрес,СтруктураПодключения.Пользователь,СтруктураПодключения.Пароль);
	ВСервис       = ВСОпределение.Сервисы.Получить(СтруктураПодключения.URIПространстваИменСервиса,СтруктураПодключения.ИмяСервиса);
    ВТочкаВхода   = ВСервис.ТочкиПодключения.Получить(СтруктураПодключения.ИмяСервиса + "Soap");
    ВОперация     = ВТочкаВхода.Интерфейс.Операции.Получить(СтруктураПодключения.ИмяФункции);    
    
    ВСПрокси = Новый WSПрокси(ВСОпределение, СтруктураПодключения.URIПространстваИменСервиса,СтруктураПодключения.ИмяСервиса,СтруктураПодключения.ИмяСервиса + "Soap"); 
    ВСПрокси.Пользователь = СтруктураПодключения.Пользователь;
	ВСПрокси.Пароль = СтруктураПодключения.Пароль;
	Ответ = ВСПрокси.debug(Новый ХранилищеЗначения(Сериализовать(ДанныеОтладки),Новый СжатиеДанных(9)));
КонецПроцедуры

Функция СтандартныеНастройкиПодключения()
	Структура = Новый Структура;
	Структура.Вставить("Пользователь","");
	Структура.Вставить("Пароль","");
	Структура.Вставить("Адрес","http://192.168.1.11/DemoTest/ws/debugging.1cws?wsdl");
	Структура.Вставить("URIПространстваИменСервиса","debugging");
	Структура.Вставить("ИмяСервиса","debugging");
	Структура.Вставить("ИмяФункции","debug");
	Возврат  Структура;
КонецФункции

Функция ВернутьТипИспользуемойОС() Экспорт
	Возврат Константы.МобильнаяОС.Получить();
КонецФункции

#Область Сериализация
Функция Сериализовать(ОбъектСериализации) Экспорт
	ДеревоВОбъектеXDTO = СериализаторXDTO.ЗаписатьXDTO(ОбъектСериализации);
	МойXML = Новый ЗаписьXML;
	МойXML.УстановитьСтроку();
	ПараметрыЗаписиXML = Новый ПараметрыЗаписиXML("UTF-8", "1.0", Ложь); 
	ФабрикаXDTO.ЗаписатьXML(МойXML, ДеревоВОбъектеXDTO);
	Возврат МойXML.Закрыть();
КонецФункции
Функция Десериализовать(XMLСтруктураСериализованногоОбъекта) Экспорт
	ЧтениеXMLДанных = Новый ЧтениеXML;
	ЧтениеXMLДанных.УстановитьСтроку(XMLСтруктураСериализованногоОбъекта);
	ТЗ = СериализаторXDTO.ПрочитатьXML(ЧтениеXMLДанных);
	ЧтениеXMLДанных.Закрыть();  
	Возврат ТЗ;
КонецФункции
#КонецОбласти

Функция ПредопределенноеПодключение(ТекстДляОтправкиНаСервер, ВернутьОтвет = Ложь) Экспорт
	ТекстДляОтправки = ТекстДляОтправкиНаСервер;
	АдресСервера = "127.0.0.1";
	ПортСервера = "8080";
	Попытка
		Соединение = Новый HTTPСоединение(АдресСервера,ПортСервера,,,,30);
		Заголовки = Новый Соответствие;
		Заголовки.Вставить("host", АдресСервера+":"+ПортСервера);
		
		Запрос = Новый HTTPЗапрос(ТекстДляОтправкиНаСервер, Заголовки);
		ОтветСервера =Соединение.Получить(Запрос);
	Исключение
		Сообщить("Не удалось установить соединение с сервером:");
		Сообщить(ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;
	Если ОтветСервера.КодСостояния = 200 Тогда // Данные получены, обрабатываем их
		Ответ= ОтветСервера.ПолучитьТелоКакСтроку();
		Попытка
			СтрОтвета = Десериализовать(Ответ);
			Если СтрОтвета.Success Тогда	
				
				Возврат ?(ВернутьОтвет,СтрОтвета,Истина);
			Иначе
				Сообщить("Не удалось выполнить команду, по причине:");
				Сообщить(СтрОтвета.Error);
				Возврат Ложь;
			КонецЕсли; 
		Исключение
			Сообщить("Не удалось распознать ответ от сервера!");
			Сообщить(ОписаниеОшибки());
			Возврат Ложь;
		КонецПопытки;
	Иначе
		Ответ = ОтветСервера.КодСостояния;
		Сообщить("Не получен ответ от сервера!");
		Возврат Ложь;
	КонецЕсли; 
КонецФункции

#Область ДопПроцедуры
Функция URLEncode(СтрокаДляКодировки) Экспорт
	Результат = "";
	ТаблицаСоответствий = СформироватьТаблицуСоответствий();
	Для Индекс = 1 По СтрДлина(СтрокаДляКодировки) Цикл        
		Символ = Сред(СтрокаДляКодировки, Индекс, 1 );        		
		НомерСимвола = КодСимвола(Символ);

		Если НомерСимвола >= 1040 И НомерСимвола <= 1103 Тогда
			Результат = Результат + ТаблицаСоответствий.Найти(Символ,"Алфавит").Замена;     
		Иначе
			Результат = Результат + Символ;
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;
КонецФункции

Функция URLDecode(СтрокаДляДекодировки) Экспорт
	Если НЕ СтрНайти(СтрокаДляДекодировки,"#") Тогда Возврат СтрокаДляДекодировки КонецЕсли;
	
	ТаблицаСоответствий = СформироватьТаблицуСоответствий();
	
	Для Каждого Стр Из ТаблицаСоответствий Цикл
		СтрокаДляДекодировки = СтрЗаменить(СтрокаДляДекодировки,Стр.Замена,Стр.Алфавит);	
	КонецЦикла;
	
	Возврат СтрокаДляДекодировки;

КонецФункции

Функция СформироватьТаблицуСоответствий() 
	ТаблицаСоответствий = Новый ТаблицаЗначений;
	ТаблицаСоответствий.Колонки.Добавить("Алфавит");	
	ТаблицаСоответствий.Колонки.Добавить("Замена");
	Замена = "#00#01#02#03#04#05#06#07#08#09#0A#0B#0C#0D#0E#0F#10#11#12#13#14#15#16#17#18#19#1A#1B#1C#1D#1E#1F#20#21#22#23#24#25#26#27#28#29#2A#2B#2C#2D#2E#2F#30#31#32#33#34#35#36#37#38#39#3A#3B#3C#3D#3E#3F#40#41#42#43#44#45#46#47#48#49#";
	Алфавит = "АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдеёжзийклмнопрстуфхцчшщъыьэюя";
	Для Индекс = 0 По СтрДлина(Алфавит) Цикл
		Нов = ТаблицаСоответствий.Добавить();
		Нов.Замена = Сред(Замена,Индекс*3+1, 3);
		Нов.Алфавит = Сред(Алфавит,Индекс,1);
	КонецЦикла;
	Возврат ТаблицаСоответствий;
КонецФункции
#КонецОбласти
