

#Область Учетки
//Открыть встроенный календарь
&НаКлиенте
Процедура ОткрытьКалендарь(Команда)
	ЗапуститьПриложение("content://com.android.calendar/time/")
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьДоступныеУчетки(Команда)
	УчетныеЗаписи.Очистить();
	МК = Новый МенеджерКалендарей;
	МассивУчеток = МК.ПолучитьУчетныеЗаписиКалендарей();
	Для каждого УЧЗ Из МассивУчеток Цикл
		ЗаполнитьЗначенияСвойств(УчетныеЗаписи.Добавить(),УЧЗ);
	КонецЦикла; 
КонецПроцедуры
#КонецОбласти

#Область ПросмотрКалендарей
//Получаем список всех доступных календарей с их свойствами
&НаКлиенте
Процедура ПолучитьСписокКалендарей(Команда) 
	
	ДревоКалендарей.ПолучитьЭлементы().Очистить();
	МК = Новый МенеджерКалендарей;
	СписокКалендарей = МК.НайтиКалендари();
	МассивКалендарей = Новый Массив;
	Для каждого Кнр Из СписокКалендарей Цикл
		ОснСтр = Новый Структура;
		//Получаем объект календаря
		ОбКнр = МК.ПолучитьКалендарь(Кнр);
		
		ДопСтр = Новый Структура;
		ДопСтр.Вставить("ГлобальныйКлючКалендаря",ОбКнр.ГлобальныйКлючКалендаря);
		ДопСтр.Вставить("ЛокальныйКлючКалендаря",Строка(Кнр));
		
		ДанКнр = Новый Структура;
		ДанКнр.Вставить("Имя", ОбКнр.ДанныеКалендаря.Имя);
		ДанКнр.Вставить("ИсходныеДанные", ОбКнр.ДанныеКалендаря.ИсходныеДанные);
		ДанКнр.Вставить("Цвет", ОбКнр.ДанныеКалендаря.Цвет);
		
		ДопСтр.Вставить("ДанныеКалендаряУчетнойЗаписи",ДанКнр);
		
		УЧЗКнр = Новый Структура;
		УЧЗКнр.Вставить("Идентификатор",Строка(ОбКнр.УчетнаяЗапись.Идентификатор));
		УЧЗКнр.Вставить("ИсточникУчетнойЗаписи",Строка(ОбКнр.УчетнаяЗапись.ИсточникУчетнойЗаписи));
		
		ДопСтр.Вставить("УчетнаяЗапись",УЧЗКнр);
		
		МассивКалендарей.Добавить(ДопСтр);
		
		ЦветоваяРасскраска(ДанКнр.Цвет, ДанКнр.Имя);
	КонецЦикла;
	ЗаполнитьДрево(МассивКалендарей);
	
	ОсновнойКалендарь = МК.ПолучитьКалендарь(МК.ПолучитьОсновнойКалендарь()).ДанныеКалендаря.Имя;
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьДрево(МассивКалендарей)
	Древо = РеквизитФормыВЗначение("ДревоКалендарей");
	Для Каждого Стр Из МассивКалендарей Цикл
		Нов = Древо.Строки.Добавить();
		ЗаполнитьСтр(Нов,"Календарь",Стр.ДанныеКалендаряУчетнойЗаписи.Имя);
		
		ЗаполнитьСтр(Нов.Строки.Добавить(),"ГлобальныйКлючКалендаря",Стр.ГлобальныйКлючКалендаря);
		ЗаполнитьСтр(Нов.Строки.Добавить(),"ЛокальныйКлючКалендаря",Стр.ЛокальныйКлючКалендаря);
		
		Нов1 = Нов.Строки.Добавить();
		ЗаполнитьСтр(Нов1,"ДанныеКалендаряУчетнойЗаписи","");
		
		ЗаполнитьСтр(Нов1.Строки.Добавить(),"Имя", Стр.ДанныеКалендаряУчетнойЗаписи.Имя);
		Нов2 = Нов1.Строки.Добавить();
		ЗаполнитьСтр(Нов2,"ИсходныеДанные", "");
		Для каждого Кл Из Стр.ДанныеКалендаряУчетнойЗаписи.ИсходныеДанные Цикл
			ЗаполнитьСтр(Нов2.Строки.Добавить(),Кл.Ключ, Кл.Значение);	
		КонецЦикла; 
		ЗаполнитьСтр(Нов1.Строки.Добавить(),"Цвет", Стр.ДанныеКалендаряУчетнойЗаписи.Цвет);
		
		Нов1 = Нов.Строки.Добавить();
		ЗаполнитьСтр(Нов1,"УчетнаяЗапись","");
		ЗаполнитьСтр(Нов1.Строки.Добавить(),"Идентификатор",Стр.УчетнаяЗапись.Идентификатор);
		ЗаполнитьСтр(Нов1.Строки.Добавить(),"ИсточникУчетнойЗаписи",Стр.УчетнаяЗапись.Идентификатор);		
	КонецЦикла; 	
	ЗначениеВРеквизитФормы(Древо,"ДревоКалендарей");
КонецПроцедуры

#КонецОбласти

#Область ПроверкаДоступаКИзменению
&НаКлиенте
Процедура ПроверитьВозможностьВзаимодействия(Команда)
	МК = Новый МенеджерКалендарей;
	ПроверкаДоступаКИзменению = МК.ПоддерживаетсяИзменениеСобытий(ПолучитьЛокальПоИмени(ВыбранныйКалендарь));
КонецПроцедуры
#КонецОбласти

#Область События
&НаКлиенте
Процедура ВыбранныйКалендарьНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	МК = Новый МенеджерКалендарей;
	СписокКалендарей = МК.НайтиКалендари();
	МассивКалендарей = Новый СписокЗначений;
	Для каждого Кнр Из СписокКалендарей Цикл
		ОбКнр = МК.ПолучитьКалендарь(Кнр);
		МассивКалендарей.Добавить(ОбКнр.ДанныеКалендаря.Имя,ОбКнр.ДанныеКалендаря.Имя);
	КонецЦикла;
	ДанныеВыбора = МассивКалендарей;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьСобытияКалендаря(Команда)
	ДревоСобытий.ПолучитьЭлементы().Очистить();
	МК = Новый МенеджерКалендарей;
	
	ВсеСобытия = МК.НайтиСобытия(,ПолучитьЛокальПоИмени(ВыбранныйКалендарь));
	КоличествоСобытийКалендаря = ВсеСобытия.Количество();
	
	СвойстваКалендаря = СтрРазделить("Тема,Описание,ВесьДень,Начало,Конец,ЧасовойПояс,Место,Организатор,Повторение",",");
	
	Для каждого ЛокСобытия Из ВсеСобытия Цикл
		Событие = МК.ПолучитьСобытие(ЛокСобытия);
		Нов = ДревоСобытий.ПолучитьЭлементы().Добавить();		
		ИмяКалендаря = МК.ПолучитьКалендарь(МК.ПолучитьКалендарьСобытия(ЛокСобытия)).ДанныеКалендаря.Имя;
		ЗаполнитьСтрКлиент(Нов,"Календарь", ИмяКалендаря);
		Нов1 = Нов.ПолучитьЭлементы().Добавить();
		СвСоб = Событие.ДанныеСобытияКалендаря;
		
		//Заполняем свойства из массива свойств
		ЗаполнитьСтрКлиент(Нов1,"Событие", СвСоб.Тема);
		Для Каждого СвойствоКалендаря Из СвойстваКалендаря Цикл
			ЗаполнитьЗначенияСвойств(Нов1.ПолучитьЭлементы().Добавить(),Новый Структура("Название,Значение", СвойствоКалендаря, Строка(СвСоб[СвойствоКалендаря])));
		КонецЦикла;
		
		Нов2 = Нов1.ПолучитьЭлементы().Добавить();
		ЗаполнитьСтрКлиент(Нов2,"ИсходныеДанные", "Данные календаря");
		Для каждого Кл Из СвСоб.ИсходныеДанные Цикл
			ЗаполнитьСтрКлиент(Нов2.ПолучитьЭлементы().Добавить(),Кл.Ключ, Кл.Значение);
		КонецЦикла; 
		
		Нов2 = Нов1.ПолучитьЭлементы().Добавить();
		ЗаполнитьСтрКлиент(Нов2,"Напоминания", "Время до начала события");
		Для Индекс = 0 По СвСоб.Напоминания.Количество() - 1 Цикл
			ЗаполнитьСтрКлиент(Нов2.ПолучитьЭлементы().Добавить(),"До " + Индекс + " напоминания", СвСоб.Напоминания[Индекс]);	
		КонецЦикла; 
		
		Нов2 = Нов1.ПолучитьЭлементы().Добавить();
		ЗаполнитьСтрКлиент(Нов2,"Участники", "Участники события");
		Для Индекс = 0 По СвСоб.Участники.Количество() - 1 Цикл
			ЗаполнитьСтрКлиент(Нов2.ПолучитьЭлементы().Добавить(),"" + Индекс + " Участник", СвСоб.Участники[Индекс]);	
		КонецЦикла; 
		
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСобытие(Команда)
	Событие = Новый ДанныеСобытияКалендаря(НачалоСобытия,КонецСобытия);
	Событие.ВесьДень = СбВесьДень;
	Событие.Место = СбМесто;
	Событие.Напоминания.Добавить(СбНапоминание);
	Событие.Описание = СбОписание;
	Событие.Организатор = СбОрганизатор;
	Событие.Повторение = ПовторениеСобытияКалендаря[СбПовторение];
	Событие.Тема = СбТема;
	
	СтрокаПолучатели = СтрРазделить(СбУчастники, ",; ", Ложь);
	Для Каждого Получатель Из СтрокаПолучатели Цикл
		Событие.Участники.Добавить(Получатель);
	КонецЦикла;
	
	МК = Новый МенеджерКалендарей;
	
	ЛокальСобытия = МК.ДобавитьСобытие(ПолучитьЛокальПоИмени(ВыбранныйКалендарь),Событие);
	Сообщить("Событие успешно создано!");
	
КонецПроцедуры
#КонецОбласти

#Область Прочее
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	НачалоСобытия = ТекущаяДата() + 160;
	КонецСобытия = ТекущаяДата() + 300;
	СбВесьДень = Истина;
	СбМесто = "Место события";
	СбНапоминание = ТекущаяДата();
	СбОписание = "Описание события";
	СбОрганизатор = "a@a.a";
	СбПовторение = "ОдинРаз";
	СбТема = "Тема события " + ТекущаяДата();
	
	СбУчастники = "a@a.a, b@b.b, c@c.c";
КонецПроцедуры

&НаКлиенте
Функция ПолучитьЛокальПоИмени(Имя)
	МК = Новый МенеджерКалендарей;
	НайденныеКалендари = МК.НайтиКалендари(Имя);
	Если НЕ НайденныеКалендари.Количество() Тогда
		Возврат Неопределено;
	Иначе
		Возврат НайденныеКалендари[0]
	КонецЕсли; 
КонецФункции

&НаСервере 
Процедура ЗаполнитьСтр(Стр, Знч1, Знч2)
	Стр.Название = Строка(Знч1);
	Стр.Значение = Строка(Знч2);
КонецПроцедуры

&НаКлиенте 
Процедура ЗаполнитьСтрКлиент(Стр, Знч1, Знч2)
	Стр.Название = Строка(Знч1);
	Стр.Значение = Строка(Знч2);
КонецПроцедуры
&НаСервере
Процедура ЦветоваяРасскраска(Цвет, Имя)
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДревоКалендарей.Значение");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = Имя;
	ЭлементОтбора.Использование = Истина;
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", Цвет);
	ЭлементОформления.Использование = Истина;
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("ДревоКалендарей");
	ПолеОформления.Использование = Истина;
КонецПроцедуры

#КонецОбласти