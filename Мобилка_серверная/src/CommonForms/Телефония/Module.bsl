
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	НомерТелефонаДляОтправкиСМС = "";
	ТекстСМСДляОтправки = "Тест";
КонецПроцедуры

#Область РаботаСКонтактами
&НаКлиенте
Процедура ДобавитьНовыйКонтакт(Команда)
	ОткрытьФорму("Обработка.ОбработкаКонтактов.Форма.Форма");
КонецПроцедуры
&НаКлиенте
Процедура ОтборПоПолямПриИзменении(Элемент)
	Элементы.ГруппаОтобрыПоискаКонтактов.Видимость = ОтборПоПолям = 2;
	Элементы.ПодстрокаПоиска.Видимость = ОтборПоПолям = 1;
КонецПроцедуры
&НаКлиенте
Процедура ПоказатьВсеОтборыПриИзменении(Элемент)
	Элементы.ГруппаДополнительныеОтборы.Видимость = ПоказатьВсеОтборы;
КонецПроцедуры
&НаКлиенте
Процедура ПоискКонтакта(Команда)
	#Если МобильноеПриложениеКлиент Тогда
		МК = Новый МенеджерКонтактов();
		
		Если ОтборПоПолям Тогда
			Отбор = Новый ОтборКомпоновкиДанных;
			//Группа = Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
			//Группа.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
			//Группа.Использование = Истина;
			Для каждого Эл Из Элементы.ГруппаОтобрыПоискаКонтактов.ПодчиненныеЭлементы Цикл
				Если Эл.Имя = "ГруппаДополнительныеОтборы" ИЛИ Эл.Имя = "ПоказатьВсеОтборы" Тогда Продолжить КонецЕсли; 						
				УстановитьОтборы(Отбор, Эл.Имя);
			КонецЦикла;
			
			Для каждого Эл Из Элементы.ГруппаДополнительныеОтборы.ПодчиненныеЭлементы Цикл			
				УстановитьОтборы(Отбор, Эл.Имя);		
			КонецЦикла;
			
			НайденыеКонтакты = МК.НайтиКонтакты(Отбор);
			
		Иначе
			НайденыеКонтакты = МК.НайтиКонтакты();
		КонецЕсли; 

		Для каждого ЛокальКонтакт Из НайденыеКонтакты Цикл
			ДанныеКонтакта = МК.ПолучитьКонтакт(ЛокальКонтакт);
			Сообщить(ДанныеКонтакта.УчетнаяЗапись.Идентификатор + ", " + ДанныеКонтакта.ДанныеКонтакта.Имя + ":");
			Для Каждого Номер Из ДанныеКонтакта.ДанныеКонтакта.НомераТелефонов Цикл
				Сообщить(Номер.Значение);
			КонецЦикла;
		КонецЦикла;  
		//Сообщить("Поиск окончен!");
		Сообщить("Всего найдено: " + НайденыеКонтакты.Количество());
#КонецЕсли	
КонецПроцедуры
&НаКлиенте
Процедура УстановитьОтборы(Отбор, Имя)
	ПравоеЗначение = ?(ОтборПоПолям = 1, ПодстрокаПоиска, Элементы[Имя].ТекстРедактирования);
	Если Не ЗначениеЗаполнено(ПравоеЗначение) Тогда Возврат  КонецЕсли; 
	НовыйЭлемент = Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовыйЭлемент.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(Имя);
	НовыйЭлемент.ВидСравнения = ВидСравненияКомпоновкиДанных.Содержит;
	НовыйЭлемент.ПравоеЗначение = ПравоеЗначение;
	НовыйЭлемент.Использование = ЗначениеЗаполнено(ПравоеЗначение);
КонецПроцедуры
&НаКлиенте
Процедура ПоказатьВсеКонтакты(Команда)
	#Если МобильноеПриложениеКлиент Тогда

	
		МК = Новый МенеджерКонтактов;
		Сообщить("Всего найдено: " + МК.ПолучитьКоличествоКонтактов() + " контактов");
		НайденыеКонтакты = МК.НайтиКонтакты();
		
		Для Индекс = 0 По ?(КоличествоКонтактов = 0, НайденыеКонтакты.Количество() - 1, КоличествоКонтактов) Цикл
			ЛокальныйКлюч = НайденыеКонтакты[Индекс] ;
			Контакт = МК.ПолучитьКонтакт(ЛокальныйКлюч);
			Если Ложь Тогда
				СервисныйМодуль.Отладка(Контакт.ДанныеКонтакта);
			КонецЕсли;
			Если СообщатьТолькоИмя Тогда
				Если ЗначениеЗаполнено(Контакт.ДанныеКонтакта.Имя) Тогда
					Сообщить("Имя : " + Контакт.ДанныеКонтакта.Имя);
				КонецЕсли; 
				Продолжить;
			КонецЕсли; 
			Сообщить("_______________");
			Для каждого Эл Из Элементы.ГруппаОтобрыПоискаКонтактов.ПодчиненныеЭлементы Цикл
				Если Эл.Имя = "ГруппаДополнительныеОтборы" ИЛИ Эл.Имя = "ПоказатьВсеОтборы" Тогда Продолжить КонецЕсли; 
				Сообщить(Эл.Имя + ": " + Контакт.ДанныеКонтакта[Эл.Имя]);
			КонецЦикла;
			Для каждого Эл Из Элементы.ГруппаДополнительныеОтборы.ПодчиненныеЭлементы Цикл			
				Сообщить(Эл.Имя + ": " + Контакт.ДанныеКонтакта[Эл.Имя]);
			КонецЦикла;
		КонецЦикла; 
	#КонецЕсли
КонецПроцедуры
&НаКлиенте
Процедура ПоказатьСуществующиеУчетныеЗаписи(Команда)  
	#Если МобильноеПриложениеКлиент Тогда 

	МК = Новый МенеджерКонтактов;
	Учетки = МК.ПолучитьУчетныеЗаписиКонтактов();
	Элементы.СуществующиеУчетки.Заголовок = "";
	Для каждого Уч Из Учетки Цикл
		Элементы.СуществующиеУчетки.Заголовок = Элементы.СуществующиеУчетки.Заголовок + Символы.ПС + (Уч.Идентификатор + ": " + Уч.ИсточникУчетнойЗаписи);
	КонецЦикла; 
	#КонецЕсли
КонецПроцедуры
#КонецОбласти 

#Область РаботаСЖурналом
&НаКлиенте
Процедура ТипЗвонкаЖурналаПриИзменении(Элемент)
	#Если МобильноеПриложениеКлиент Тогда
	Если СредстваТелефонии.ПоддерживаетсяЖурналЗвонков() Тогда
		Журнал = СредстваТелефонии.ПолучитьЖурналЗвонков();		
		Отбор = Новый ОтборКомпоновкиДанных;
		Если ТипЗвонкаЖурнала <> "Все" Тогда
			НовыйЭлемент = Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			НовыйЭлемент.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТипЗвонка");
			НовыйЭлемент.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			НовыйЭлемент.ПравоеЗначение = ТипЗвонкаЖурналаЗвонков[ТипЗвонкаЖурнала];
			НовыйЭлемент.Использование = Истина;
		КонецЕсли; 
		ЗаписиЖурнала = Журнал.НайтиЗаписи(Отбор);
		ЖурналЗвонков.Очистить();
		Для каждого Запись Из ЗаписиЖурнала Цикл
			Нов = ЖурналЗвонков.Добавить();
			ЗаполнитьЗначенияСвойств(Нов, Запись);
			Нов.Наименование = ПолучитьИмяКонтакта(Запись.НомерТелефона);
			Нов.ВидКартинки = ПолучитьКартинкуЗвонка(Запись.ТипЗвонка);
		КонецЦикла;
	КонецЕсли;
	#КонецЕсли
КонецПроцедуры

&НаКлиенте
Функция ПолучитьИмяКонтакта(НомерТелефона)
	#Если МобильноеПриложениеКлиент Тогда
	МК = Новый МенеджерКонтактов;
	Отбор = Новый ОтборКомпоновкиДанных;
	НовыйЭлемент = Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовыйЭлемент.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДанныеКонтакта.НомераТелефонов");
	НовыйЭлемент.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	НовыйЭлемент.ПравоеЗначение = НомерТелефона;
	НовыйЭлемент.Использование = Истина;
	Контакты = МК.НайтиКонтакты(Отбор);
	Если Контакты.Количество() = 0 Тогда Возврат "Номер не определен" КонецЕсли;
	Контакт = МК.ПолучитьКонтакт(Контакты[0]);
	Возврат Контакт.ДанныеКонтакта.Имя;
	#КонецЕсли
КонецФункции

&НаКлиенте
Процедура ОткрытьЖурналЗвонков(Команда)
	ЗапуститьПриложение("content://call_log/calls");
КонецПроцедуры

&НаКлиенте
Функция ПолучитьКартинкуЗвонка(ТипЗвонка)
	#Если МобильноеПриложениеКлиент Тогда

	Если ТипЗвонка = ТипЗвонкаЖурналаЗвонков.Пропущенный Тогда
		Возврат 0
	ИначеЕсли ТипЗвонка = ТипЗвонкаЖурналаЗвонков.Входящий Тогда
		Возврат 1
	Иначе Возврат 2 КонецЕсли; 
	#КонецЕсли
КонецФункции
 #КонецОбласти  
 
#Область РаботаСМС
&НаКлиенте
Процедура ОтправитьСМС(Команда)
	#Если МобильноеПриложениеКлиент Тогда
	СМС = Новый SMSСообщение();
	СМС.Текст = ТекстСМСДляОтправки;
	СтрокаПолучатели = СтрЗаменить(НомерТелефонаДляОтправкиСМС, ",", Символы.ПС);
	Для Счетчик=1 По СтрЧислоСтрок(СтрокаПолучатели) Цикл
		СМС.Получатели.Добавить(СокрЛП(СтрПолучитьСтроку(СтрокаПолучатели, Счетчик)));
	КонецЦикла;
	СредстваТелефонии.ПослатьSMS(СМС, ВидОтправкиСМС);
	Сообщить("Смс отправлено!");
	#КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура ПодключитьПолучениеСМС(Команда)
#Если МобильноеПриложениеКлиент Тогда
  ПолучательСообщений = Новый ОписаниеОповещения("ПолучениеСообщения", ЭтаФорма);
  СредстваТелефонии.ПодключитьОбработчикSMSСообщений(ПолучательСообщений);
  Сообщить("Обработчик получения смс - подключен!");
  Элементы.ПодключитьПолучениеСМС.Доступность = Ложь;
  Элементы.ОтключитьПолучениеСМС.Доступность = Истина;
 #КонецЕсли
КонецПроцедуры
&НаКлиенте
Процедура ПолучениеСообщения(Сообщение, ДополнительныеПараметры) Экспорт

		ОтправительСМС = Сообщение.Отправитель;
		КоличествоВложенийСМС = Сообщение.Вложения.Количество();
		ДатаПринятогоСМС = Сообщение.ДатаПолучения;
		ТекстПринятогоСМС = Сообщение.Текст;
		ОбновитьОтображениеДанных();
		Сообщить("Пришло новое сообщение! От " + Сообщение.Отправитель);
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьПолучениеСМС(Команда)
	#Если МобильноеПриложениеКлиент Тогда
	
	ПолучательСообщений = Новый ОписаниеОповещения("ПолучениеСообщения", ЭтаФорма);
	СредстваТелефонии.ОтключитьОбработчикSMSСообщений();//ПолучательСообщений);
	Элементы.ПодключитьПолучениеСМС.Доступность = Истина;
  	Элементы.ОтключитьПолучениеСМС.Доступность = Ложь;
	
	#КонецЕсли
КонецПроцедуры
#КонецОбласти

&НаКлиенте
Процедура НабратьНомер(Команда)
	#Если МобильноеПриложениеКлиент Тогда
	Если СредстваТелефонии.ПоддерживаетсяНаборНомера() Тогда
		СредстваТелефонии.НабратьНомер(НомерТелефонаДляНабора, РежимНабораНомера);
	КонецЕсли;
	#КонецЕсли
КонецПроцедуры

